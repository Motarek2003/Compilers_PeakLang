Terminals unused in grammar

   CASE
   DEFAULT
   '?'
   ':'


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function_definition
    4                     | variable_definition

    5 variable_definition: type_specifier identifier_list ';'

    6 identifier_list: IDENTIFIER
    7                | identifier_list ',' IDENTIFIER

    8 type_specifier: INT
    9               | FLOAT
   10               | CHAR
   11               | VOID

   12 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement

   13 parameter_list: /* empty */
   14               | parameter_declaration
   15               | parameter_list ',' parameter_declaration

   16 parameter_declaration: type_specifier IDENTIFIER

   17 compound_statement: '{' '}'
   18                   | '{' scope '}'

   19 scope: scope_item
   20      | scope scope_item

   21 scope_item: variable_definition
   22           | statement

   23 statement: expression_statement
   24          | compound_statement
   25          | selection_statement
   26          | loop_statement
   27          | jump_statement

   28 expression_statement: ';'
   29                     | expression ';'

   30 selection_statement: IF '(' expression ')' statement
   31                    | IF '(' expression ')' statement ELSE statement
   32                    | SWITCH '(' expression ')' statement

   33 loop_statement: WHILE '(' expression ')' statement
   34               | DO statement WHILE '(' expression ')' ';'
   35               | FOR '(' expression_statement expression_statement expression ')' statement

   36 jump_statement: GOTO IDENTIFIER ';'
   37               | CONTINUE ';'
   38               | BREAK ';'
   39               | RETURN ';'
   40               | RETURN expression ';'

   41 expression: assignment_expression
   42           | expression ',' assignment_expression

   43 assignment_expression: logical_or_expression
   44                      | IDENTIFIER '=' assignment_expression

   45 logical_or_expression: logical_and_expression
   46                      | logical_or_expression OR_OP logical_and_expression

   47 logical_and_expression: inclusive_or_expression
   48                       | logical_and_expression AND_OP inclusive_or_expression

   49 inclusive_or_expression: exclusive_or_expression
   50                        | inclusive_or_expression '|' exclusive_or_expression

   51 exclusive_or_expression: and_expression
   52                        | exclusive_or_expression '^' and_expression

   53 and_expression: equality_expression
   54               | and_expression '&' equality_expression

   55 equality_expression: relational_expression
   56                    | equality_expression EQ_OP relational_expression
   57                    | equality_expression NE_OP relational_expression

   58 relational_expression: shift_expression
   59                      | relational_expression '<' shift_expression
   60                      | relational_expression '>' shift_expression
   61                      | relational_expression LE_OP shift_expression
   62                      | relational_expression GE_OP shift_expression

   63 shift_expression: additive_expression
   64                 | shift_expression LEFT_OP additive_expression
   65                 | shift_expression RIGHT_OP additive_expression

   66 additive_expression: multiplicative_expression
   67                    | additive_expression '+' multiplicative_expression
   68                    | additive_expression '-' multiplicative_expression

   69 multiplicative_expression: unary_expression
   70                          | multiplicative_expression '*' unary_expression
   71                          | multiplicative_expression '/' unary_expression
   72                          | multiplicative_expression '%' unary_expression

   73 unary_expression: primary_expression
   74                 | '-' unary_expression
   75                 | '+' unary_expression
   76                 | '!' unary_expression
   77                 | '~' unary_expression

   78 primary_expression: IDENTIFIER
   79                   | CONSTANT
   80                   | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'%' (37) 72
'&' (38) 54
'(' (40) 12 30 31 32 33 34 35 80
')' (41) 12 30 31 32 33 34 35 80
'*' (42) 70
'+' (43) 67 75
',' (44) 7 15 42
'-' (45) 68 74
'/' (47) 71
':' (58)
';' (59) 5 28 29 34 36 37 38 39 40
'<' (60) 59
'=' (61) 44
'>' (62) 60
'?' (63)
'^' (94) 52
'{' (123) 17 18
'|' (124) 50
'}' (125) 17 18
'~' (126) 77
error (256)
IDENTIFIER (258) 6 7 12 16 36 44 78
CONSTANT (259) 79
INT (260) 8
FLOAT (261) 9
CHAR (262) 10
VOID (263) 11
CASE (264)
DEFAULT (265)
IF (266) 30 31
ELSE (267) 31
SWITCH (268) 32
WHILE (269) 33 34
DO (270) 34
FOR (271) 35
GOTO (272) 36
CONTINUE (273) 37
BREAK (274) 38
RETURN (275) 39 40
AND_OP (276) 48
OR_OP (277) 46
EQ_OP (278) 56
NE_OP (279) 57
LE_OP (280) 61
GE_OP (281) 62
LEFT_OP (282) 64
RIGHT_OP (283) 65
UPLUS (284)
UMINUS (285)
LOWER_THAN_ELSE (286)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 2
external_declaration (55)
    on left: 3 4, on right: 1 2
variable_definition (56)
    on left: 5, on right: 4 21
identifier_list (57)
    on left: 6 7, on right: 5 7
type_specifier (58)
    on left: 8 9 10 11, on right: 5 12 16
function_definition (59)
    on left: 12, on right: 3
parameter_list (60)
    on left: 13 14 15, on right: 12 15
parameter_declaration (61)
    on left: 16, on right: 14 15
compound_statement (62)
    on left: 17 18, on right: 12 24
scope (63)
    on left: 19 20, on right: 18 20
scope_item (64)
    on left: 21 22, on right: 19 20
statement (65)
    on left: 23 24 25 26 27, on right: 22 30 31 32 33 34 35
expression_statement (66)
    on left: 28 29, on right: 23 35
selection_statement (67)
    on left: 30 31 32, on right: 25
loop_statement (68)
    on left: 33 34 35, on right: 26
jump_statement (69)
    on left: 36 37 38 39 40, on right: 27
expression (70)
    on left: 41 42, on right: 29 30 31 32 33 34 35 40 42 80
assignment_expression (71)
    on left: 43 44, on right: 41 42 44
logical_or_expression (72)
    on left: 45 46, on right: 43 46
logical_and_expression (73)
    on left: 47 48, on right: 45 46 48
inclusive_or_expression (74)
    on left: 49 50, on right: 47 48 50
exclusive_or_expression (75)
    on left: 51 52, on right: 49 50 52
and_expression (76)
    on left: 53 54, on right: 51 52 54
equality_expression (77)
    on left: 55 56 57, on right: 53 54 56 57
relational_expression (78)
    on left: 58 59 60 61 62, on right: 55 56 57 59 60 61 62
shift_expression (79)
    on left: 63 64 65, on right: 58 59 60 61 62 64 65
additive_expression (80)
    on left: 66 67 68, on right: 63 64 65 67 68
multiplicative_expression (81)
    on left: 69 70 71 72, on right: 66 67 68 70 71 72
unary_expression (82)
    on left: 73 74 75 76 77, on right: 69 70 71 72 74 75 76 77
primary_expression (83)
    on left: 78 79 80, on right: 73


state 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    program               go to state 5
    external_declaration  go to state 6
    variable_definition   go to state 7
    type_specifier        go to state 8
    function_definition   go to state 9


state 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


state 2

    9 type_specifier: FLOAT .

    $default  reduce using rule 9 (type_specifier)


state 3

   10 type_specifier: CHAR .

    $default  reduce using rule 10 (type_specifier)


state 4

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


state 5

    0 $accept: program . $end
    2 program: program . external_declaration

    $end   shift, and go to state 10
    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    external_declaration  go to state 11
    variable_definition   go to state 7
    type_specifier        go to state 8
    function_definition   go to state 9


state 6

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


state 7

    4 external_declaration: variable_definition .

    $default  reduce using rule 4 (external_declaration)


state 8

    5 variable_definition: type_specifier . identifier_list ';'
   12 function_definition: type_specifier . IDENTIFIER '(' parameter_list ')' compound_statement

    IDENTIFIER  shift, and go to state 12

    identifier_list  go to state 13


state 9

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 10

    0 $accept: program $end .

    $default  accept


state 11

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


state 12

    6 identifier_list: IDENTIFIER .
   12 function_definition: type_specifier IDENTIFIER . '(' parameter_list ')' compound_statement

    '('  shift, and go to state 14

    $default  reduce using rule 6 (identifier_list)


state 13

    5 variable_definition: type_specifier identifier_list . ';'
    7 identifier_list: identifier_list . ',' IDENTIFIER

    ';'  shift, and go to state 15
    ','  shift, and go to state 16


state 14

   12 function_definition: type_specifier IDENTIFIER '(' . parameter_list ')' compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 13 (parameter_list)

    type_specifier         go to state 17
    parameter_list         go to state 18
    parameter_declaration  go to state 19


state 15

    5 variable_definition: type_specifier identifier_list ';' .

    $default  reduce using rule 5 (variable_definition)


state 16

    7 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 20


state 17

   16 parameter_declaration: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


state 18

   12 function_definition: type_specifier IDENTIFIER '(' parameter_list . ')' compound_statement
   15 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 22
    ')'  shift, and go to state 23


state 19

   14 parameter_list: parameter_declaration .

    $default  reduce using rule 14 (parameter_list)


state 20

    7 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 7 (identifier_list)


state 21

   16 parameter_declaration: type_specifier IDENTIFIER .

    $default  reduce using rule 16 (parameter_declaration)


state 22

   15 parameter_list: parameter_list ',' . parameter_declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    type_specifier         go to state 17
    parameter_declaration  go to state 24


state 23

   12 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' . compound_statement

    '{'  shift, and go to state 25

    compound_statement  go to state 26


state 24

   15 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 15 (parameter_list)


state 25

   17 compound_statement: '{' . '}'
   18                   | '{' . scope '}'

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25
    '}'         shift, and go to state 44

    variable_definition        go to state 45
    type_specifier             go to state 46
    compound_statement         go to state 47
    scope                      go to state 48
    scope_item                 go to state 49
    statement                  go to state 50
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 26

   12 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement .

    $default  reduce using rule 12 (function_definition)


state 27

   44 assignment_expression: IDENTIFIER . '=' assignment_expression
   78 primary_expression: IDENTIFIER .

    '='  shift, and go to state 69

    $default  reduce using rule 78 (primary_expression)


state 28

   79 primary_expression: CONSTANT .

    $default  reduce using rule 79 (primary_expression)


state 29

   30 selection_statement: IF . '(' expression ')' statement
   31                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 70


state 30

   32 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 71


state 31

   33 loop_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 72


state 32

   34 loop_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 73
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 33

   35 loop_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 74


state 34

   36 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 75


state 35

   37 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 76


state 36

   38 jump_statement: BREAK . ';'

    ';'  shift, and go to state 77


state 37

   39 jump_statement: RETURN . ';'
   40               | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 78
    '('         shift, and go to state 43

    expression                 go to state 79
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 38

   75 unary_expression: '+' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 81
    primary_expression  go to state 68


state 39

   74 unary_expression: '-' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 82
    primary_expression  go to state 68


state 40

   76 unary_expression: '!' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 83
    primary_expression  go to state 68


state 41

   77 unary_expression: '~' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 84
    primary_expression  go to state 68


state 42

   28 expression_statement: ';' .

    $default  reduce using rule 28 (expression_statement)


state 43

   80 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 85
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 44

   17 compound_statement: '{' '}' .

    $default  reduce using rule 17 (compound_statement)


state 45

   21 scope_item: variable_definition .

    $default  reduce using rule 21 (scope_item)


state 46

    5 variable_definition: type_specifier . identifier_list ';'

    IDENTIFIER  shift, and go to state 86

    identifier_list  go to state 13


state 47

   24 statement: compound_statement .

    $default  reduce using rule 24 (statement)


state 48

   18 compound_statement: '{' scope . '}'
   20 scope: scope . scope_item

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25
    '}'         shift, and go to state 87

    variable_definition        go to state 45
    type_specifier             go to state 46
    compound_statement         go to state 47
    scope_item                 go to state 88
    statement                  go to state 50
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 49

   19 scope: scope_item .

    $default  reduce using rule 19 (scope)


state 50

   22 scope_item: statement .

    $default  reduce using rule 22 (scope_item)


state 51

   23 statement: expression_statement .

    $default  reduce using rule 23 (statement)


state 52

   25 statement: selection_statement .

    $default  reduce using rule 25 (statement)


state 53

   26 statement: loop_statement .

    $default  reduce using rule 26 (statement)


state 54

   27 statement: jump_statement .

    $default  reduce using rule 27 (statement)


state 55

   29 expression_statement: expression . ';'
   42 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 89
    ','  shift, and go to state 90


state 56

   41 expression: assignment_expression .

    $default  reduce using rule 41 (expression)


state 57

   43 assignment_expression: logical_or_expression .
   46 logical_or_expression: logical_or_expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 91

    $default  reduce using rule 43 (assignment_expression)


state 58

   45 logical_or_expression: logical_and_expression .
   48 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 92

    $default  reduce using rule 45 (logical_or_expression)


state 59

   47 logical_and_expression: inclusive_or_expression .
   50 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 93

    $default  reduce using rule 47 (logical_and_expression)


state 60

   49 inclusive_or_expression: exclusive_or_expression .
   52 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 94

    $default  reduce using rule 49 (inclusive_or_expression)


state 61

   51 exclusive_or_expression: and_expression .
   54 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 95

    $default  reduce using rule 51 (exclusive_or_expression)


state 62

   53 and_expression: equality_expression .
   56 equality_expression: equality_expression . EQ_OP relational_expression
   57                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 96
    NE_OP  shift, and go to state 97

    $default  reduce using rule 53 (and_expression)


state 63

   55 equality_expression: relational_expression .
   59 relational_expression: relational_expression . '<' shift_expression
   60                      | relational_expression . '>' shift_expression
   61                      | relational_expression . LE_OP shift_expression
   62                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 98
    GE_OP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 55 (equality_expression)


state 64

   58 relational_expression: shift_expression .
   64 shift_expression: shift_expression . LEFT_OP additive_expression
   65                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 102
    RIGHT_OP  shift, and go to state 103

    $default  reduce using rule 58 (relational_expression)


state 65

   63 shift_expression: additive_expression .
   67 additive_expression: additive_expression . '+' multiplicative_expression
   68                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 63 (shift_expression)


state 66

   66 additive_expression: multiplicative_expression .
   70 multiplicative_expression: multiplicative_expression . '*' unary_expression
   71                          | multiplicative_expression . '/' unary_expression
   72                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 66 (additive_expression)


state 67

   69 multiplicative_expression: unary_expression .

    $default  reduce using rule 69 (multiplicative_expression)


state 68

   73 unary_expression: primary_expression .

    $default  reduce using rule 73 (unary_expression)


state 69

   44 assignment_expression: IDENTIFIER '=' . assignment_expression

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    assignment_expression      go to state 109
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 70

   30 selection_statement: IF '(' . expression ')' statement
   31                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 110
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 71

   32 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 111
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 72

   33 loop_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 112
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 73

   34 loop_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 113


state 74

   35 loop_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43

    expression_statement       go to state 114
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 75

   36 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 115


state 76

   37 jump_statement: CONTINUE ';' .

    $default  reduce using rule 37 (jump_statement)


state 77

   38 jump_statement: BREAK ';' .

    $default  reduce using rule 38 (jump_statement)


state 78

   39 jump_statement: RETURN ';' .

    $default  reduce using rule 39 (jump_statement)


state 79

   40 jump_statement: RETURN expression . ';'
   42 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 116
    ','  shift, and go to state 90


state 80

   78 primary_expression: IDENTIFIER .

    $default  reduce using rule 78 (primary_expression)


state 81

   75 unary_expression: '+' unary_expression .

    $default  reduce using rule 75 (unary_expression)


state 82

   74 unary_expression: '-' unary_expression .

    $default  reduce using rule 74 (unary_expression)


state 83

   76 unary_expression: '!' unary_expression .

    $default  reduce using rule 76 (unary_expression)


state 84

   77 unary_expression: '~' unary_expression .

    $default  reduce using rule 77 (unary_expression)


state 85

   42 expression: expression . ',' assignment_expression
   80 primary_expression: '(' expression . ')'

    ','  shift, and go to state 90
    ')'  shift, and go to state 117


state 86

    6 identifier_list: IDENTIFIER .

    $default  reduce using rule 6 (identifier_list)


state 87

   18 compound_statement: '{' scope '}' .

    $default  reduce using rule 18 (compound_statement)


state 88

   20 scope: scope scope_item .

    $default  reduce using rule 20 (scope)


state 89

   29 expression_statement: expression ';' .

    $default  reduce using rule 29 (expression_statement)


state 90

   42 expression: expression ',' . assignment_expression

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    assignment_expression      go to state 118
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 91

   46 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    logical_and_expression     go to state 119
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 92

   48 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    inclusive_or_expression    go to state 120
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 93

   50 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    exclusive_or_expression    go to state 121
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 94

   52 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    and_expression             go to state 122
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 95

   54 and_expression: and_expression '&' . equality_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    equality_expression        go to state 123
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 96

   56 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    relational_expression      go to state 124
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 97

   57 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    relational_expression      go to state 125
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 98

   61 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    shift_expression           go to state 126
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 99

   62 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    shift_expression           go to state 127
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 100

   59 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    shift_expression           go to state 128
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 101

   60 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    shift_expression           go to state 129
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 102

   64 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    additive_expression        go to state 130
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 103

   65 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    additive_expression        go to state 131
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 104

   67 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    multiplicative_expression  go to state 132
    unary_expression           go to state 67
    primary_expression         go to state 68


state 105

   68 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    multiplicative_expression  go to state 133
    unary_expression           go to state 67
    primary_expression         go to state 68


state 106

   70 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 134
    primary_expression  go to state 68


state 107

   71 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 135
    primary_expression  go to state 68


state 108

   72 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER  shift, and go to state 80
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    unary_expression    go to state 136
    primary_expression  go to state 68


state 109

   44 assignment_expression: IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 44 (assignment_expression)


state 110

   30 selection_statement: IF '(' expression . ')' statement
   31                    | IF '(' expression . ')' statement ELSE statement
   42 expression: expression . ',' assignment_expression

    ','  shift, and go to state 90
    ')'  shift, and go to state 137


state 111

   32 selection_statement: SWITCH '(' expression . ')' statement
   42 expression: expression . ',' assignment_expression

    ','  shift, and go to state 90
    ')'  shift, and go to state 138


state 112

   33 loop_statement: WHILE '(' expression . ')' statement
   42 expression: expression . ',' assignment_expression

    ','  shift, and go to state 90
    ')'  shift, and go to state 139


state 113

   34 loop_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 140


state 114

   35 loop_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43

    expression_statement       go to state 141
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 115

   36 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 36 (jump_statement)


state 116

   40 jump_statement: RETURN expression ';' .

    $default  reduce using rule 40 (jump_statement)


state 117

   80 primary_expression: '(' expression ')' .

    $default  reduce using rule 80 (primary_expression)


state 118

   42 expression: expression ',' assignment_expression .

    $default  reduce using rule 42 (expression)


state 119

   46 logical_or_expression: logical_or_expression OR_OP logical_and_expression .
   48 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 92

    $default  reduce using rule 46 (logical_or_expression)


state 120

   48 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .
   50 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 93

    $default  reduce using rule 48 (logical_and_expression)


state 121

   50 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
   52 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 94

    $default  reduce using rule 50 (inclusive_or_expression)


state 122

   52 exclusive_or_expression: exclusive_or_expression '^' and_expression .
   54 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 95

    $default  reduce using rule 52 (exclusive_or_expression)


state 123

   54 and_expression: and_expression '&' equality_expression .
   56 equality_expression: equality_expression . EQ_OP relational_expression
   57                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 96
    NE_OP  shift, and go to state 97

    $default  reduce using rule 54 (and_expression)


state 124

   56 equality_expression: equality_expression EQ_OP relational_expression .
   59 relational_expression: relational_expression . '<' shift_expression
   60                      | relational_expression . '>' shift_expression
   61                      | relational_expression . LE_OP shift_expression
   62                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 98
    GE_OP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 56 (equality_expression)


state 125

   57 equality_expression: equality_expression NE_OP relational_expression .
   59 relational_expression: relational_expression . '<' shift_expression
   60                      | relational_expression . '>' shift_expression
   61                      | relational_expression . LE_OP shift_expression
   62                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 98
    GE_OP  shift, and go to state 99
    '<'    shift, and go to state 100
    '>'    shift, and go to state 101

    $default  reduce using rule 57 (equality_expression)


state 126

   61 relational_expression: relational_expression LE_OP shift_expression .
   64 shift_expression: shift_expression . LEFT_OP additive_expression
   65                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 102
    RIGHT_OP  shift, and go to state 103

    $default  reduce using rule 61 (relational_expression)


state 127

   62 relational_expression: relational_expression GE_OP shift_expression .
   64 shift_expression: shift_expression . LEFT_OP additive_expression
   65                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 102
    RIGHT_OP  shift, and go to state 103

    $default  reduce using rule 62 (relational_expression)


state 128

   59 relational_expression: relational_expression '<' shift_expression .
   64 shift_expression: shift_expression . LEFT_OP additive_expression
   65                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 102
    RIGHT_OP  shift, and go to state 103

    $default  reduce using rule 59 (relational_expression)


state 129

   60 relational_expression: relational_expression '>' shift_expression .
   64 shift_expression: shift_expression . LEFT_OP additive_expression
   65                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 102
    RIGHT_OP  shift, and go to state 103

    $default  reduce using rule 60 (relational_expression)


state 130

   64 shift_expression: shift_expression LEFT_OP additive_expression .
   67 additive_expression: additive_expression . '+' multiplicative_expression
   68                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 64 (shift_expression)


state 131

   65 shift_expression: shift_expression RIGHT_OP additive_expression .
   67 additive_expression: additive_expression . '+' multiplicative_expression
   68                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 65 (shift_expression)


state 132

   67 additive_expression: additive_expression '+' multiplicative_expression .
   70 multiplicative_expression: multiplicative_expression . '*' unary_expression
   71                          | multiplicative_expression . '/' unary_expression
   72                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 67 (additive_expression)


state 133

   68 additive_expression: additive_expression '-' multiplicative_expression .
   70 multiplicative_expression: multiplicative_expression . '*' unary_expression
   71                          | multiplicative_expression . '/' unary_expression
   72                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 68 (additive_expression)


state 134

   70 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 70 (multiplicative_expression)


state 135

   71 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 71 (multiplicative_expression)


state 136

   72 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 72 (multiplicative_expression)


state 137

   30 selection_statement: IF '(' expression ')' . statement
   31                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 142
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 138

   32 selection_statement: SWITCH '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 143
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 139

   33 loop_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 144
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 140

   34 loop_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 145
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 141

   35 loop_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    '('         shift, and go to state 43

    expression                 go to state 146
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 142

   30 selection_statement: IF '(' expression ')' statement .
   31                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 147

    $default  reduce using rule 30 (selection_statement)


state 143

   32 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 32 (selection_statement)


state 144

   33 loop_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 33 (loop_statement)


state 145

   34 loop_statement: DO statement WHILE '(' expression . ')' ';'
   42 expression: expression . ',' assignment_expression

    ','  shift, and go to state 90
    ')'  shift, and go to state 148


state 146

   35 loop_statement: FOR '(' expression_statement expression_statement expression . ')' statement
   42 expression: expression . ',' assignment_expression

    ','  shift, and go to state 90
    ')'  shift, and go to state 149


state 147

   31 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 150
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 148

   34 loop_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 151


state 149

   35 loop_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  shift, and go to state 27
    CONSTANT    shift, and go to state 28
    IF          shift, and go to state 29
    SWITCH      shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    FOR         shift, and go to state 33
    GOTO        shift, and go to state 34
    CONTINUE    shift, and go to state 35
    BREAK       shift, and go to state 36
    RETURN      shift, and go to state 37
    '+'         shift, and go to state 38
    '-'         shift, and go to state 39
    '!'         shift, and go to state 40
    '~'         shift, and go to state 41
    ';'         shift, and go to state 42
    '('         shift, and go to state 43
    '{'         shift, and go to state 25

    compound_statement         go to state 47
    statement                  go to state 152
    expression_statement       go to state 51
    selection_statement        go to state 52
    loop_statement             go to state 53
    jump_statement             go to state 54
    expression                 go to state 55
    assignment_expression      go to state 56
    logical_or_expression      go to state 57
    logical_and_expression     go to state 58
    inclusive_or_expression    go to state 59
    exclusive_or_expression    go to state 60
    and_expression             go to state 61
    equality_expression        go to state 62
    relational_expression      go to state 63
    shift_expression           go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    primary_expression         go to state 68


state 150

   31 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 31 (selection_statement)


state 151

   34 loop_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 34 (loop_statement)


state 152

   35 loop_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 35 (loop_statement)
