Terminals unused in grammar

   TRUE
   FALSE
   '?'


Grammar

    0 $accept: mainProgram $end

    1 mainProgram: program
    2            | error

    3 program: external_declaration
    4        | program external_declaration

    5 external_declaration: function_definition
    6                     | variable_definition

    7 variable_definition: type_specifier identifier_list ';'
    8                    | type_specifier identifier_list ASSIGNMENT expression ';'
    9                    | CONSTANT type_specifier identifier_list ASSIGNMENT expression ';'

   10 identifier_list: IDENTIFIER
   11                | identifier_list ',' IDENTIFIER

   12 type_specifier: INT
   13               | FLOAT
   14               | CHAR
   15               | VOID
   16               | BOOL

   17 expression: assignment_expression
   18           | expression ',' assignment_expression

   19 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement

   20 parameter_list: parameter_declaration
   21               | parameter_list ',' parameter_declaration

   22 parameter_declaration: type_specifier IDENTIFIER

   23 compound_statement: '{' '}'
   24                   | '{' scope '}'

   25 scope: scope_item
   26      | scope scope_item

   27 scope_item: variable_definition
   28           | statement

   29 expression_statement: ';'
   30                     | expression ';'

   31 statement: expression_statement
   32          | compound_statement
   33          | selection_statement
   34          | loop_statement
   35          | jump_statement

   36 selection_statement: IF '(' expression ')' statement
   37                    | IF '(' expression ')' statement ELSE statement
   38                    | SWITCH '(' expression ')' '{' case_list '}'

   39 case_list: case_item
   40          | case_list case_item

   41 case_item: CASE CONSTANT ':' statement
   42          | DEFAULT ':' statement

   43 loop_statement: WHILE '(' expression ')' statement
   44               | DO statement WHILE '(' expression ')' ';'
   45               | FOR '(' expression_statement expression_statement expression ')' statement

   46 jump_statement: GOTO IDENTIFIER ';'
   47               | CONTINUE ';'
   48               | BREAK ';'
   49               | RETURN ';'
   50               | RETURN expression ';'

   51 assignment_expression: logical_or_expression
   52                      | IDENTIFIER '=' assignment_expression

   53 logical_or_expression: logical_and_expression
   54                      | logical_or_expression OR_OP logical_and_expression

   55 logical_and_expression: inclusive_or_expression
   56                       | logical_and_expression AND_OP inclusive_or_expression

   57 inclusive_or_expression: exclusive_or_expression
   58                        | inclusive_or_expression '|' exclusive_or_expression

   59 exclusive_or_expression: and_expression
   60                        | exclusive_or_expression '^' and_expression

   61 and_expression: equality_expression
   62               | and_expression '&' equality_expression

   63 equality_expression: relational_expression
   64                    | equality_expression EQ_OP relational_expression
   65                    | equality_expression NE_OP relational_expression

   66 relational_expression: shift_expression
   67                      | relational_expression '<' shift_expression
   68                      | relational_expression '>' shift_expression
   69                      | relational_expression LE_OP shift_expression
   70                      | relational_expression GE_OP shift_expression

   71 shift_expression: additive_expression
   72                 | shift_expression LEFT_OP additive_expression
   73                 | shift_expression RIGHT_OP additive_expression

   74 additive_expression: multiplicative_expression
   75                    | additive_expression '+' multiplicative_expression
   76                    | additive_expression '-' multiplicative_expression

   77 multiplicative_expression: unary_expression
   78                          | multiplicative_expression '*' unary_expression
   79                          | multiplicative_expression '/' unary_expression
   80                          | multiplicative_expression '%' unary_expression

   81 unary_expression: primary_expression
   82                 | '-' unary_expression
   83                 | '+' unary_expression
   84                 | '!' unary_expression
   85                 | '~' unary_expression

   86 primary_expression: IDENTIFIER
   87                   | CONSTANT
   88                   | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 84
'%' (37) 80
'&' (38) 62
'(' (40) 19 36 37 38 43 44 45 88
')' (41) 19 36 37 38 43 44 45 88
'*' (42) 78
'+' (43) 75 83
',' (44) 11 18 21
'-' (45) 76 82
'/' (47) 79
':' (58) 41 42
';' (59) 7 8 9 29 30 44 46 47 48 49 50
'<' (60) 67
'=' (61) 52
'>' (62) 68
'?' (63)
'^' (94) 60
'{' (123) 23 24 38
'|' (124) 58
'}' (125) 23 24 38
'~' (126) 85
error (256) 2
IDENTIFIER (258) 10 11 19 22 46 52 86
CONSTANT (259) 9 41 87
INT (260) 12
FLOAT (261) 13
CHAR (262) 14
VOID (263) 15
BOOL (264) 16
TRUE (265)
FALSE (266)
CASE (267) 41
DEFAULT (268) 42
IF (269) 36 37
ELSE (270) 37
SWITCH (271) 38
WHILE (272) 43 44
DO (273) 44
FOR (274) 45
GOTO (275) 46
CONTINUE (276) 47
BREAK (277) 48
RETURN (278) 49 50
ASSIGNMENT (279) 8 9
AND_OP (280) 56
OR_OP (281) 54
EQ_OP (282) 64
NE_OP (283) 65
LE_OP (284) 69
GE_OP (285) 70
LEFT_OP (286) 72
RIGHT_OP (287) 73
UPLUS (288)
UMINUS (289)
LOWER_THAN_ELSE (290)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
mainProgram (58)
    on left: 1 2, on right: 0
program (59)
    on left: 3 4, on right: 1 4
external_declaration (60)
    on left: 5 6, on right: 3 4
variable_definition (61)
    on left: 7 8 9, on right: 6 27
identifier_list (62)
    on left: 10 11, on right: 7 8 9 11
type_specifier (63)
    on left: 12 13 14 15 16, on right: 7 8 9 19 22
expression (64)
    on left: 17 18, on right: 8 9 18 30 36 37 38 43 44 45 50 88
function_definition (65)
    on left: 19, on right: 5
parameter_list (66)
    on left: 20 21, on right: 19 21
parameter_declaration (67)
    on left: 22, on right: 20 21
compound_statement (68)
    on left: 23 24, on right: 19 32
scope (69)
    on left: 25 26, on right: 24 26
scope_item (70)
    on left: 27 28, on right: 25 26
expression_statement (71)
    on left: 29 30, on right: 31 45
statement (72)
    on left: 31 32 33 34 35, on right: 28 36 37 41 42 43 44 45
selection_statement (73)
    on left: 36 37 38, on right: 33
case_list (74)
    on left: 39 40, on right: 38 40
case_item (75)
    on left: 41 42, on right: 39 40
loop_statement (76)
    on left: 43 44 45, on right: 34
jump_statement (77)
    on left: 46 47 48 49 50, on right: 35
assignment_expression (78)
    on left: 51 52, on right: 17 18 52
logical_or_expression (79)
    on left: 53 54, on right: 51 54
logical_and_expression (80)
    on left: 55 56, on right: 53 54 56
inclusive_or_expression (81)
    on left: 57 58, on right: 55 56 58
exclusive_or_expression (82)
    on left: 59 60, on right: 57 58 60
and_expression (83)
    on left: 61 62, on right: 59 60 62
equality_expression (84)
    on left: 63 64 65, on right: 61 62 64 65
relational_expression (85)
    on left: 66 67 68 69 70, on right: 63 64 65 67 68 69 70
shift_expression (86)
    on left: 71 72 73, on right: 66 67 68 69 70 72 73
additive_expression (87)
    on left: 74 75 76, on right: 71 72 73 75 76
multiplicative_expression (88)
    on left: 77 78 79 80, on right: 74 75 76 78 79 80
unary_expression (89)
    on left: 81 82 83 84 85, on right: 77 78 79 80 82 83 84 85
primary_expression (90)
    on left: 86 87 88, on right: 81


state 0

    0 $accept: . mainProgram $end

    error     shift, and go to state 1
    CONSTANT  shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    CHAR      shift, and go to state 5
    VOID      shift, and go to state 6
    BOOL      shift, and go to state 7

    mainProgram           go to state 8
    program               go to state 9
    external_declaration  go to state 10
    variable_definition   go to state 11
    type_specifier        go to state 12
    function_definition   go to state 13


state 1

    2 mainProgram: error .

    $default  reduce using rule 2 (mainProgram)


state 2

    9 variable_definition: CONSTANT . type_specifier identifier_list ASSIGNMENT expression ';'

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    CHAR   shift, and go to state 5
    VOID   shift, and go to state 6
    BOOL   shift, and go to state 7

    type_specifier  go to state 14


state 3

   12 type_specifier: INT .

    $default  reduce using rule 12 (type_specifier)


state 4

   13 type_specifier: FLOAT .

    $default  reduce using rule 13 (type_specifier)


state 5

   14 type_specifier: CHAR .

    $default  reduce using rule 14 (type_specifier)


state 6

   15 type_specifier: VOID .

    $default  reduce using rule 15 (type_specifier)


state 7

   16 type_specifier: BOOL .

    $default  reduce using rule 16 (type_specifier)


state 8

    0 $accept: mainProgram . $end

    $end  shift, and go to state 15


state 9

    1 mainProgram: program .
    4 program: program . external_declaration

    CONSTANT  shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    CHAR      shift, and go to state 5
    VOID      shift, and go to state 6
    BOOL      shift, and go to state 7

    $default  reduce using rule 1 (mainProgram)

    external_declaration  go to state 16
    variable_definition   go to state 11
    type_specifier        go to state 12
    function_definition   go to state 13


state 10

    3 program: external_declaration .

    $default  reduce using rule 3 (program)


state 11

    6 external_declaration: variable_definition .

    $default  reduce using rule 6 (external_declaration)


state 12

    7 variable_definition: type_specifier . identifier_list ';'
    8                    | type_specifier . identifier_list ASSIGNMENT expression ';'
   19 function_definition: type_specifier . IDENTIFIER '(' parameter_list ')' compound_statement

    IDENTIFIER  shift, and go to state 17

    identifier_list  go to state 18


state 13

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


state 14

    9 variable_definition: CONSTANT type_specifier . identifier_list ASSIGNMENT expression ';'

    IDENTIFIER  shift, and go to state 19

    identifier_list  go to state 20


state 15

    0 $accept: mainProgram $end .

    $default  accept


state 16

    4 program: program external_declaration .

    $default  reduce using rule 4 (program)


state 17

   10 identifier_list: IDENTIFIER .
   19 function_definition: type_specifier IDENTIFIER . '(' parameter_list ')' compound_statement

    '('  shift, and go to state 21

    $default  reduce using rule 10 (identifier_list)


state 18

    7 variable_definition: type_specifier identifier_list . ';'
    8                    | type_specifier identifier_list . ASSIGNMENT expression ';'
   11 identifier_list: identifier_list . ',' IDENTIFIER

    ASSIGNMENT  shift, and go to state 22
    ';'         shift, and go to state 23
    ','         shift, and go to state 24


state 19

   10 identifier_list: IDENTIFIER .

    $default  reduce using rule 10 (identifier_list)


state 20

    9 variable_definition: CONSTANT type_specifier identifier_list . ASSIGNMENT expression ';'
   11 identifier_list: identifier_list . ',' IDENTIFIER

    ASSIGNMENT  shift, and go to state 25
    ','         shift, and go to state 24


state 21

   19 function_definition: type_specifier IDENTIFIER '(' . parameter_list ')' compound_statement

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    CHAR   shift, and go to state 5
    VOID   shift, and go to state 6
    BOOL   shift, and go to state 7

    type_specifier         go to state 26
    parameter_list         go to state 27
    parameter_declaration  go to state 28


state 22

    8 variable_definition: type_specifier identifier_list ASSIGNMENT . expression ';'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 36
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 23

    7 variable_definition: type_specifier identifier_list ';' .

    $default  reduce using rule 7 (variable_definition)


state 24

   11 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


state 25

    9 variable_definition: CONSTANT type_specifier identifier_list ASSIGNMENT . expression ';'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 51
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 26

   22 parameter_declaration: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 52


state 27

   19 function_definition: type_specifier IDENTIFIER '(' parameter_list . ')' compound_statement
   21 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 53
    ')'  shift, and go to state 54


state 28

   20 parameter_list: parameter_declaration .

    $default  reduce using rule 20 (parameter_list)


state 29

   52 assignment_expression: IDENTIFIER . '=' assignment_expression
   86 primary_expression: IDENTIFIER .

    '='  shift, and go to state 55

    $default  reduce using rule 86 (primary_expression)


state 30

   87 primary_expression: CONSTANT .

    $default  reduce using rule 87 (primary_expression)


state 31

   84 unary_expression: '!' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 57
    primary_expression  go to state 49


state 32

   85 unary_expression: '~' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 58
    primary_expression  go to state 49


state 33

   83 unary_expression: '+' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 59
    primary_expression  go to state 49


state 34

   82 unary_expression: '-' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 60
    primary_expression  go to state 49


state 35

   88 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 61
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 36

    8 variable_definition: type_specifier identifier_list ASSIGNMENT expression . ';'
   18 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 62
    ','  shift, and go to state 63


state 37

   17 expression: assignment_expression .

    $default  reduce using rule 17 (expression)


state 38

   51 assignment_expression: logical_or_expression .
   54 logical_or_expression: logical_or_expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 64

    $default  reduce using rule 51 (assignment_expression)


state 39

   53 logical_or_expression: logical_and_expression .
   56 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 65

    $default  reduce using rule 53 (logical_or_expression)


state 40

   55 logical_and_expression: inclusive_or_expression .
   58 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 66

    $default  reduce using rule 55 (logical_and_expression)


state 41

   57 inclusive_or_expression: exclusive_or_expression .
   60 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 67

    $default  reduce using rule 57 (inclusive_or_expression)


state 42

   59 exclusive_or_expression: and_expression .
   62 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 68

    $default  reduce using rule 59 (exclusive_or_expression)


state 43

   61 and_expression: equality_expression .
   64 equality_expression: equality_expression . EQ_OP relational_expression
   65                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 69
    NE_OP  shift, and go to state 70

    $default  reduce using rule 61 (and_expression)


state 44

   63 equality_expression: relational_expression .
   67 relational_expression: relational_expression . '<' shift_expression
   68                      | relational_expression . '>' shift_expression
   69                      | relational_expression . LE_OP shift_expression
   70                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 63 (equality_expression)


state 45

   66 relational_expression: shift_expression .
   72 shift_expression: shift_expression . LEFT_OP additive_expression
   73                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 75
    RIGHT_OP  shift, and go to state 76

    $default  reduce using rule 66 (relational_expression)


state 46

   71 shift_expression: additive_expression .
   75 additive_expression: additive_expression . '+' multiplicative_expression
   76                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 71 (shift_expression)


state 47

   74 additive_expression: multiplicative_expression .
   78 multiplicative_expression: multiplicative_expression . '*' unary_expression
   79                          | multiplicative_expression . '/' unary_expression
   80                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 74 (additive_expression)


state 48

   77 multiplicative_expression: unary_expression .

    $default  reduce using rule 77 (multiplicative_expression)


state 49

   81 unary_expression: primary_expression .

    $default  reduce using rule 81 (unary_expression)


state 50

   11 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 11 (identifier_list)


state 51

    9 variable_definition: CONSTANT type_specifier identifier_list ASSIGNMENT expression . ';'
   18 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 82
    ','  shift, and go to state 63


state 52

   22 parameter_declaration: type_specifier IDENTIFIER .

    $default  reduce using rule 22 (parameter_declaration)


state 53

   21 parameter_list: parameter_list ',' . parameter_declaration

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    CHAR   shift, and go to state 5
    VOID   shift, and go to state 6
    BOOL   shift, and go to state 7

    type_specifier         go to state 26
    parameter_declaration  go to state 83


state 54

   19 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' . compound_statement

    '{'  shift, and go to state 84

    compound_statement  go to state 85


state 55

   52 assignment_expression: IDENTIFIER '=' . assignment_expression

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    assignment_expression      go to state 86
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 56

   86 primary_expression: IDENTIFIER .

    $default  reduce using rule 86 (primary_expression)


state 57

   84 unary_expression: '!' unary_expression .

    $default  reduce using rule 84 (unary_expression)


state 58

   85 unary_expression: '~' unary_expression .

    $default  reduce using rule 85 (unary_expression)


state 59

   83 unary_expression: '+' unary_expression .

    $default  reduce using rule 83 (unary_expression)


state 60

   82 unary_expression: '-' unary_expression .

    $default  reduce using rule 82 (unary_expression)


state 61

   18 expression: expression . ',' assignment_expression
   88 primary_expression: '(' expression . ')'

    ','  shift, and go to state 63
    ')'  shift, and go to state 87


state 62

    8 variable_definition: type_specifier identifier_list ASSIGNMENT expression ';' .

    $default  reduce using rule 8 (variable_definition)


state 63

   18 expression: expression ',' . assignment_expression

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    assignment_expression      go to state 88
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 64

   54 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    logical_and_expression     go to state 89
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 65

   56 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    inclusive_or_expression    go to state 90
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 66

   58 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    exclusive_or_expression    go to state 91
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 67

   60 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    and_expression             go to state 92
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 68

   62 and_expression: and_expression '&' . equality_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    equality_expression        go to state 93
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 69

   64 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    relational_expression      go to state 94
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 70

   65 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    relational_expression      go to state 95
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 71

   69 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    shift_expression           go to state 96
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 72

   70 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    shift_expression           go to state 97
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 73

   67 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    shift_expression           go to state 98
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 74

   68 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    shift_expression           go to state 99
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 75

   72 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    additive_expression        go to state 100
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 76

   73 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    additive_expression        go to state 101
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 77

   75 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    multiplicative_expression  go to state 102
    unary_expression           go to state 48
    primary_expression         go to state 49


state 78

   76 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    multiplicative_expression  go to state 103
    unary_expression           go to state 48
    primary_expression         go to state 49


state 79

   78 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 104
    primary_expression  go to state 49


state 80

   79 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 105
    primary_expression  go to state 49


state 81

   80 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER  shift, and go to state 56
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    unary_expression    go to state 106
    primary_expression  go to state 49


state 82

    9 variable_definition: CONSTANT type_specifier identifier_list ASSIGNMENT expression ';' .

    $default  reduce using rule 9 (variable_definition)


state 83

   21 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 21 (parameter_list)


state 84

   23 compound_statement: '{' . '}'
   24                   | '{' . scope '}'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 107
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    CHAR        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOL        shift, and go to state 7
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84
    '}'         shift, and go to state 118

    variable_definition        go to state 119
    type_specifier             go to state 120
    expression                 go to state 121
    compound_statement         go to state 122
    scope                      go to state 123
    scope_item                 go to state 124
    expression_statement       go to state 125
    statement                  go to state 126
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 85

   19 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement .

    $default  reduce using rule 19 (function_definition)


state 86

   52 assignment_expression: IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 52 (assignment_expression)


state 87

   88 primary_expression: '(' expression ')' .

    $default  reduce using rule 88 (primary_expression)


state 88

   18 expression: expression ',' assignment_expression .

    $default  reduce using rule 18 (expression)


state 89

   54 logical_or_expression: logical_or_expression OR_OP logical_and_expression .
   56 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 65

    $default  reduce using rule 54 (logical_or_expression)


state 90

   56 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .
   58 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 66

    $default  reduce using rule 56 (logical_and_expression)


state 91

   58 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
   60 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 67

    $default  reduce using rule 58 (inclusive_or_expression)


state 92

   60 exclusive_or_expression: exclusive_or_expression '^' and_expression .
   62 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 68

    $default  reduce using rule 60 (exclusive_or_expression)


state 93

   62 and_expression: and_expression '&' equality_expression .
   64 equality_expression: equality_expression . EQ_OP relational_expression
   65                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 69
    NE_OP  shift, and go to state 70

    $default  reduce using rule 62 (and_expression)


state 94

   64 equality_expression: equality_expression EQ_OP relational_expression .
   67 relational_expression: relational_expression . '<' shift_expression
   68                      | relational_expression . '>' shift_expression
   69                      | relational_expression . LE_OP shift_expression
   70                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 64 (equality_expression)


state 95

   65 equality_expression: equality_expression NE_OP relational_expression .
   67 relational_expression: relational_expression . '<' shift_expression
   68                      | relational_expression . '>' shift_expression
   69                      | relational_expression . LE_OP shift_expression
   70                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 65 (equality_expression)


state 96

   69 relational_expression: relational_expression LE_OP shift_expression .
   72 shift_expression: shift_expression . LEFT_OP additive_expression
   73                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 75
    RIGHT_OP  shift, and go to state 76

    $default  reduce using rule 69 (relational_expression)


state 97

   70 relational_expression: relational_expression GE_OP shift_expression .
   72 shift_expression: shift_expression . LEFT_OP additive_expression
   73                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 75
    RIGHT_OP  shift, and go to state 76

    $default  reduce using rule 70 (relational_expression)


state 98

   67 relational_expression: relational_expression '<' shift_expression .
   72 shift_expression: shift_expression . LEFT_OP additive_expression
   73                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 75
    RIGHT_OP  shift, and go to state 76

    $default  reduce using rule 67 (relational_expression)


state 99

   68 relational_expression: relational_expression '>' shift_expression .
   72 shift_expression: shift_expression . LEFT_OP additive_expression
   73                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 75
    RIGHT_OP  shift, and go to state 76

    $default  reduce using rule 68 (relational_expression)


state 100

   72 shift_expression: shift_expression LEFT_OP additive_expression .
   75 additive_expression: additive_expression . '+' multiplicative_expression
   76                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 72 (shift_expression)


state 101

   73 shift_expression: shift_expression RIGHT_OP additive_expression .
   75 additive_expression: additive_expression . '+' multiplicative_expression
   76                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 73 (shift_expression)


state 102

   75 additive_expression: additive_expression '+' multiplicative_expression .
   78 multiplicative_expression: multiplicative_expression . '*' unary_expression
   79                          | multiplicative_expression . '/' unary_expression
   80                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 75 (additive_expression)


state 103

   76 additive_expression: additive_expression '-' multiplicative_expression .
   78 multiplicative_expression: multiplicative_expression . '*' unary_expression
   79                          | multiplicative_expression . '/' unary_expression
   80                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 76 (additive_expression)


state 104

   78 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 78 (multiplicative_expression)


state 105

   79 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 79 (multiplicative_expression)


state 106

   80 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 80 (multiplicative_expression)


state 107

    9 variable_definition: CONSTANT . type_specifier identifier_list ASSIGNMENT expression ';'
   87 primary_expression: CONSTANT .

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    CHAR   shift, and go to state 5
    VOID   shift, and go to state 6
    BOOL   shift, and go to state 7

    $default  reduce using rule 87 (primary_expression)

    type_specifier  go to state 14


state 108

   36 selection_statement: IF . '(' expression ')' statement
   37                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 130


state 109

   38 selection_statement: SWITCH . '(' expression ')' '{' case_list '}'

    '('  shift, and go to state 131


state 110

   43 loop_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 132


state 111

   44 loop_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 133
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 112

   45 loop_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 134


state 113

   46 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 135


state 114

   47 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 136


state 115

   48 jump_statement: BREAK . ';'

    ';'  shift, and go to state 137


state 116

   49 jump_statement: RETURN . ';'
   50               | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 138
    '('         shift, and go to state 35

    expression                 go to state 139
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 117

   29 expression_statement: ';' .

    $default  reduce using rule 29 (expression_statement)


state 118

   23 compound_statement: '{' '}' .

    $default  reduce using rule 23 (compound_statement)


state 119

   27 scope_item: variable_definition .

    $default  reduce using rule 27 (scope_item)


state 120

    7 variable_definition: type_specifier . identifier_list ';'
    8                    | type_specifier . identifier_list ASSIGNMENT expression ';'

    IDENTIFIER  shift, and go to state 19

    identifier_list  go to state 18


state 121

   18 expression: expression . ',' assignment_expression
   30 expression_statement: expression . ';'

    ';'  shift, and go to state 140
    ','  shift, and go to state 63


state 122

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


state 123

   24 compound_statement: '{' scope . '}'
   26 scope: scope . scope_item

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 107
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    CHAR        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOL        shift, and go to state 7
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84
    '}'         shift, and go to state 141

    variable_definition        go to state 119
    type_specifier             go to state 120
    expression                 go to state 121
    compound_statement         go to state 122
    scope_item                 go to state 142
    expression_statement       go to state 125
    statement                  go to state 126
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 124

   25 scope: scope_item .

    $default  reduce using rule 25 (scope)


state 125

   31 statement: expression_statement .

    $default  reduce using rule 31 (statement)


state 126

   28 scope_item: statement .

    $default  reduce using rule 28 (scope_item)


state 127

   33 statement: selection_statement .

    $default  reduce using rule 33 (statement)


state 128

   34 statement: loop_statement .

    $default  reduce using rule 34 (statement)


state 129

   35 statement: jump_statement .

    $default  reduce using rule 35 (statement)


state 130

   36 selection_statement: IF '(' . expression ')' statement
   37                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 143
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 131

   38 selection_statement: SWITCH '(' . expression ')' '{' case_list '}'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 144
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 132

   43 loop_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 145
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 133

   44 loop_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 146


state 134

   45 loop_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35

    expression                 go to state 121
    expression_statement       go to state 147
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 135

   46 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 148


state 136

   47 jump_statement: CONTINUE ';' .

    $default  reduce using rule 47 (jump_statement)


state 137

   48 jump_statement: BREAK ';' .

    $default  reduce using rule 48 (jump_statement)


state 138

   49 jump_statement: RETURN ';' .

    $default  reduce using rule 49 (jump_statement)


state 139

   18 expression: expression . ',' assignment_expression
   50 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 149
    ','  shift, and go to state 63


state 140

   30 expression_statement: expression ';' .

    $default  reduce using rule 30 (expression_statement)


state 141

   24 compound_statement: '{' scope '}' .

    $default  reduce using rule 24 (compound_statement)


state 142

   26 scope: scope scope_item .

    $default  reduce using rule 26 (scope)


state 143

   18 expression: expression . ',' assignment_expression
   36 selection_statement: IF '(' expression . ')' statement
   37                    | IF '(' expression . ')' statement ELSE statement

    ','  shift, and go to state 63
    ')'  shift, and go to state 150


state 144

   18 expression: expression . ',' assignment_expression
   38 selection_statement: SWITCH '(' expression . ')' '{' case_list '}'

    ','  shift, and go to state 63
    ')'  shift, and go to state 151


state 145

   18 expression: expression . ',' assignment_expression
   43 loop_statement: WHILE '(' expression . ')' statement

    ','  shift, and go to state 63
    ')'  shift, and go to state 152


state 146

   44 loop_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 153


state 147

   45 loop_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35

    expression                 go to state 121
    expression_statement       go to state 154
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 148

   46 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 46 (jump_statement)


state 149

   50 jump_statement: RETURN expression ';' .

    $default  reduce using rule 50 (jump_statement)


state 150

   36 selection_statement: IF '(' expression ')' . statement
   37                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 155
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 151

   38 selection_statement: SWITCH '(' expression ')' . '{' case_list '}'

    '{'  shift, and go to state 156


state 152

   43 loop_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 157
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 153

   44 loop_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 158
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 154

   45 loop_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    '('         shift, and go to state 35

    expression                 go to state 159
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 155

   36 selection_statement: IF '(' expression ')' statement .
   37                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 160

    $default  reduce using rule 36 (selection_statement)


state 156

   38 selection_statement: SWITCH '(' expression ')' '{' . case_list '}'

    CASE     shift, and go to state 161
    DEFAULT  shift, and go to state 162

    case_list  go to state 163
    case_item  go to state 164


state 157

   43 loop_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 43 (loop_statement)


state 158

   18 expression: expression . ',' assignment_expression
   44 loop_statement: DO statement WHILE '(' expression . ')' ';'

    ','  shift, and go to state 63
    ')'  shift, and go to state 165


state 159

   18 expression: expression . ',' assignment_expression
   45 loop_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ','  shift, and go to state 63
    ')'  shift, and go to state 166


state 160

   37 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 167
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 161

   41 case_item: CASE . CONSTANT ':' statement

    CONSTANT  shift, and go to state 168


state 162

   42 case_item: DEFAULT . ':' statement

    ':'  shift, and go to state 169


state 163

   38 selection_statement: SWITCH '(' expression ')' '{' case_list . '}'
   40 case_list: case_list . case_item

    CASE     shift, and go to state 161
    DEFAULT  shift, and go to state 162
    '}'      shift, and go to state 170

    case_item  go to state 171


state 164

   39 case_list: case_item .

    $default  reduce using rule 39 (case_list)


state 165

   44 loop_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 172


state 166

   45 loop_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 173
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 167

   37 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 37 (selection_statement)


state 168

   41 case_item: CASE CONSTANT . ':' statement

    ':'  shift, and go to state 174


state 169

   42 case_item: DEFAULT ':' . statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 175
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 170

   38 selection_statement: SWITCH '(' expression ')' '{' case_list '}' .

    $default  reduce using rule 38 (selection_statement)


state 171

   40 case_list: case_list case_item .

    $default  reduce using rule 40 (case_list)


state 172

   44 loop_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 44 (loop_statement)


state 173

   45 loop_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 45 (loop_statement)


state 174

   41 case_item: CASE CONSTANT ':' . statement

    IDENTIFIER  shift, and go to state 29
    CONSTANT    shift, and go to state 30
    IF          shift, and go to state 108
    SWITCH      shift, and go to state 109
    WHILE       shift, and go to state 110
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    GOTO        shift, and go to state 113
    CONTINUE    shift, and go to state 114
    BREAK       shift, and go to state 115
    RETURN      shift, and go to state 116
    '!'         shift, and go to state 31
    '~'         shift, and go to state 32
    '+'         shift, and go to state 33
    '-'         shift, and go to state 34
    ';'         shift, and go to state 117
    '('         shift, and go to state 35
    '{'         shift, and go to state 84

    expression                 go to state 121
    compound_statement         go to state 122
    expression_statement       go to state 125
    statement                  go to state 176
    selection_statement        go to state 127
    loop_statement             go to state 128
    jump_statement             go to state 129
    assignment_expression      go to state 37
    logical_or_expression      go to state 38
    logical_and_expression     go to state 39
    inclusive_or_expression    go to state 40
    exclusive_or_expression    go to state 41
    and_expression             go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    shift_expression           go to state 45
    additive_expression        go to state 46
    multiplicative_expression  go to state 47
    unary_expression           go to state 48
    primary_expression         go to state 49


state 175

   42 case_item: DEFAULT ':' statement .

    $default  reduce using rule 42 (case_item)


state 176

   41 case_item: CASE CONSTANT ':' statement .

    $default  reduce using rule 41 (case_item)
