Terminals unused in grammar

   '?'
   '='


Grammar

    0 $accept: mainProgram $end

    1 mainProgram: program
    2            | error

    3 program: external_declaration
    4        | program external_declaration

    5 external_declaration: function_definition
    6                     | variable_definition
    7                     | expression_statement

    8 variable_definition: type_specifier identifier_list ';'
    9                    | type_specifier identifier_list ASSIGNMENT expression ';'
   10                    | THABET type_specifier identifier_list ASSIGNMENT expression ';'

   11 identifier_list: IDENTIFIER
   12                | identifier_list ',' IDENTIFIER

   13 type_specifier: INT
   14               | FLOAT
   15               | CHAR
   16               | VOID
   17               | BOOL

   18 expression: assignment_expression
   19           | expression ',' assignment_expression

   20 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement

   21 parameter_list: parameter_declaration
   22               | parameter_list ',' parameter_declaration

   23 parameter_declaration: type_specifier IDENTIFIER

   24 compound_statement: '{' '}'
   25                   | '{' scope '}'

   26 scope: scope_item
   27      | scope scope_item

   28 scope_item: variable_definition
   29           | statement

   30 expression_statement: ';'
   31                     | expression ';'

   32 statement: expression_statement
   33          | compound_statement
   34          | selection_statement
   35          | loop_statement
   36          | jump_statement

   37 selection_statement: IF '(' expression ')' statement
   38                    | IF '(' expression ')' statement ELSE statement
   39                    | SWITCH '(' expression ')' '{' case_list '}'

   40 case_list: case_item
   41          | case_list case_item

   42 case_item: CASE CONSTANT ':' statement
   43          | DEFAULT ':' statement

   44 loop_statement: WHILE '(' expression ')' statement
   45               | DO statement WHILE '(' expression ')' ';'
   46               | FOR '(' expression_statement expression_statement expression ')' statement

   47 jump_statement: GOTO IDENTIFIER ';'
   48               | CONTINUE ';'
   49               | BREAK ';'
   50               | RETURN ';'
   51               | RETURN expression ';'

   52 assignment_expression: logical_or_expression
   53                      | IDENTIFIER ASSIGNMENT assignment_expression

   54 logical_or_expression: logical_and_expression
   55                      | logical_or_expression OR_OP logical_and_expression

   56 logical_and_expression: inclusive_or_expression
   57                       | logical_and_expression AND_OP inclusive_or_expression

   58 inclusive_or_expression: exclusive_or_expression
   59                        | inclusive_or_expression '|' exclusive_or_expression

   60 exclusive_or_expression: and_expression
   61                        | exclusive_or_expression '^' and_expression

   62 and_expression: equality_expression
   63               | and_expression '&' equality_expression

   64 equality_expression: relational_expression
   65                    | equality_expression EQ_OP relational_expression
   66                    | equality_expression NE_OP relational_expression

   67 relational_expression: shift_expression
   68                      | relational_expression '<' shift_expression
   69                      | relational_expression '>' shift_expression
   70                      | relational_expression LE_OP shift_expression
   71                      | relational_expression GE_OP shift_expression

   72 shift_expression: additive_expression
   73                 | shift_expression LEFT_OP additive_expression
   74                 | shift_expression RIGHT_OP additive_expression

   75 additive_expression: multiplicative_expression
   76                    | additive_expression '+' multiplicative_expression
   77                    | additive_expression '-' multiplicative_expression

   78 multiplicative_expression: unary_expression
   79                          | multiplicative_expression '*' unary_expression
   80                          | multiplicative_expression '/' unary_expression
   81                          | multiplicative_expression '%' unary_expression

   82 unary_expression: primary_expression
   83                 | '-' unary_expression
   84                 | '+' unary_expression
   85                 | '!' unary_expression
   86                 | '~' unary_expression

   87 primary_expression: IDENTIFIER
   88                   | CONSTANT
   89                   | TRUE
   90                   | FALSE
   91                   | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 85
'%' (37) 81
'&' (38) 63
'(' (40) 20 37 38 39 44 45 46 91
')' (41) 20 37 38 39 44 45 46 91
'*' (42) 79
'+' (43) 76 84
',' (44) 12 19 22
'-' (45) 77 83
'/' (47) 80
':' (58) 42 43
';' (59) 8 9 10 30 31 45 47 48 49 50 51
'<' (60) 68
'=' (61)
'>' (62) 69
'?' (63)
'^' (94) 61
'{' (123) 24 25 39
'|' (124) 59
'}' (125) 24 25 39
'~' (126) 86
error (256) 2
IDENTIFIER (258) 11 12 20 23 47 53 87
CONSTANT (259) 42 88
INT (260) 13
FLOAT (261) 14
CHAR (262) 15
VOID (263) 16
BOOL (264) 17
TRUE (265) 89
FALSE (266) 90
CASE (267) 42
DEFAULT (268) 43
IF (269) 37 38
ELSE (270) 38
SWITCH (271) 39
WHILE (272) 44 45
DO (273) 45
FOR (274) 46
GOTO (275) 47
CONTINUE (276) 48
BREAK (277) 49
RETURN (278) 50 51
THABET (279) 10
ASSIGNMENT (280) 9 10 53
AND_OP (281) 57
OR_OP (282) 55
EQ_OP (283) 65
NE_OP (284) 66
LE_OP (285) 70
GE_OP (286) 71
LEFT_OP (287) 73
RIGHT_OP (288) 74
UPLUS (289)
UMINUS (290)
LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
mainProgram (59)
    on left: 1 2, on right: 0
program (60)
    on left: 3 4, on right: 1 4
external_declaration (61)
    on left: 5 6 7, on right: 3 4
variable_definition (62)
    on left: 8 9 10, on right: 6 28
identifier_list (63)
    on left: 11 12, on right: 8 9 10 12
type_specifier (64)
    on left: 13 14 15 16 17, on right: 8 9 10 20 23
expression (65)
    on left: 18 19, on right: 9 10 19 31 37 38 39 44 45 46 51 91
function_definition (66)
    on left: 20, on right: 5
parameter_list (67)
    on left: 21 22, on right: 20 22
parameter_declaration (68)
    on left: 23, on right: 21 22
compound_statement (69)
    on left: 24 25, on right: 20 33
scope (70)
    on left: 26 27, on right: 25 27
scope_item (71)
    on left: 28 29, on right: 26 27
expression_statement (72)
    on left: 30 31, on right: 7 32 46
statement (73)
    on left: 32 33 34 35 36, on right: 29 37 38 42 43 44 45 46
selection_statement (74)
    on left: 37 38 39, on right: 34
case_list (75)
    on left: 40 41, on right: 39 41
case_item (76)
    on left: 42 43, on right: 40 41
loop_statement (77)
    on left: 44 45 46, on right: 35
jump_statement (78)
    on left: 47 48 49 50 51, on right: 36
assignment_expression (79)
    on left: 52 53, on right: 18 19 53
logical_or_expression (80)
    on left: 54 55, on right: 52 55
logical_and_expression (81)
    on left: 56 57, on right: 54 55 57
inclusive_or_expression (82)
    on left: 58 59, on right: 56 57 59
exclusive_or_expression (83)
    on left: 60 61, on right: 58 59 61
and_expression (84)
    on left: 62 63, on right: 60 61 63
equality_expression (85)
    on left: 64 65 66, on right: 62 63 65 66
relational_expression (86)
    on left: 67 68 69 70 71, on right: 64 65 66 68 69 70 71
shift_expression (87)
    on left: 72 73 74, on right: 67 68 69 70 71 73 74
additive_expression (88)
    on left: 75 76 77, on right: 72 73 74 76 77
multiplicative_expression (89)
    on left: 78 79 80 81, on right: 75 76 77 79 80 81
unary_expression (90)
    on left: 82 83 84 85 86, on right: 78 79 80 81 83 84 85 86
primary_expression (91)
    on left: 87 88 89 90 91, on right: 82


state 0

    0 $accept: . mainProgram $end

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    CHAR        shift, and go to state 6
    VOID        shift, and go to state 7
    BOOL        shift, and go to state 8
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    THABET      shift, and go to state 11
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17

    mainProgram                go to state 18
    program                    go to state 19
    external_declaration       go to state 20
    variable_definition        go to state 21
    type_specifier             go to state 22
    expression                 go to state 23
    function_definition        go to state 24
    expression_statement       go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 1

    2 mainProgram: error .

    $default  reduce using rule 2 (mainProgram)


state 2

   53 assignment_expression: IDENTIFIER . ASSIGNMENT assignment_expression
   87 primary_expression: IDENTIFIER .

    ASSIGNMENT  shift, and go to state 39

    $default  reduce using rule 87 (primary_expression)


state 3

   88 primary_expression: CONSTANT .

    $default  reduce using rule 88 (primary_expression)


state 4

   13 type_specifier: INT .

    $default  reduce using rule 13 (type_specifier)


state 5

   14 type_specifier: FLOAT .

    $default  reduce using rule 14 (type_specifier)


state 6

   15 type_specifier: CHAR .

    $default  reduce using rule 15 (type_specifier)


state 7

   16 type_specifier: VOID .

    $default  reduce using rule 16 (type_specifier)


state 8

   17 type_specifier: BOOL .

    $default  reduce using rule 17 (type_specifier)


state 9

   89 primary_expression: TRUE .

    $default  reduce using rule 89 (primary_expression)


state 10

   90 primary_expression: FALSE .

    $default  reduce using rule 90 (primary_expression)


state 11

   10 variable_definition: THABET . type_specifier identifier_list ASSIGNMENT expression ';'

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    BOOL   shift, and go to state 8

    type_specifier  go to state 40


state 12

   85 unary_expression: '!' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 42
    primary_expression  go to state 38


state 13

   86 unary_expression: '~' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 43
    primary_expression  go to state 38


state 14

   84 unary_expression: '+' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 44
    primary_expression  go to state 38


state 15

   83 unary_expression: '-' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 45
    primary_expression  go to state 38


state 16

   30 expression_statement: ';' .

    $default  reduce using rule 30 (expression_statement)


state 17

   91 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 46
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 18

    0 $accept: mainProgram . $end

    $end  shift, and go to state 47


state 19

    1 mainProgram: program .
    4 program: program . external_declaration

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    CHAR        shift, and go to state 6
    VOID        shift, and go to state 7
    BOOL        shift, and go to state 8
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    THABET      shift, and go to state 11
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 1 (mainProgram)

    external_declaration       go to state 48
    variable_definition        go to state 21
    type_specifier             go to state 22
    expression                 go to state 23
    function_definition        go to state 24
    expression_statement       go to state 25
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 20

    3 program: external_declaration .

    $default  reduce using rule 3 (program)


state 21

    6 external_declaration: variable_definition .

    $default  reduce using rule 6 (external_declaration)


state 22

    8 variable_definition: type_specifier . identifier_list ';'
    9                    | type_specifier . identifier_list ASSIGNMENT expression ';'
   20 function_definition: type_specifier . IDENTIFIER '(' parameter_list ')' compound_statement

    IDENTIFIER  shift, and go to state 49

    identifier_list  go to state 50


state 23

   19 expression: expression . ',' assignment_expression
   31 expression_statement: expression . ';'

    ';'  shift, and go to state 51
    ','  shift, and go to state 52


state 24

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


state 25

    7 external_declaration: expression_statement .

    $default  reduce using rule 7 (external_declaration)


state 26

   18 expression: assignment_expression .

    $default  reduce using rule 18 (expression)


state 27

   52 assignment_expression: logical_or_expression .
   55 logical_or_expression: logical_or_expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 53

    $default  reduce using rule 52 (assignment_expression)


state 28

   54 logical_or_expression: logical_and_expression .
   57 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 54

    $default  reduce using rule 54 (logical_or_expression)


state 29

   56 logical_and_expression: inclusive_or_expression .
   59 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 55

    $default  reduce using rule 56 (logical_and_expression)


state 30

   58 inclusive_or_expression: exclusive_or_expression .
   61 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 56

    $default  reduce using rule 58 (inclusive_or_expression)


state 31

   60 exclusive_or_expression: and_expression .
   63 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 57

    $default  reduce using rule 60 (exclusive_or_expression)


state 32

   62 and_expression: equality_expression .
   65 equality_expression: equality_expression . EQ_OP relational_expression
   66                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 58
    NE_OP  shift, and go to state 59

    $default  reduce using rule 62 (and_expression)


state 33

   64 equality_expression: relational_expression .
   68 relational_expression: relational_expression . '<' shift_expression
   69                      | relational_expression . '>' shift_expression
   70                      | relational_expression . LE_OP shift_expression
   71                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 64 (equality_expression)


state 34

   67 relational_expression: shift_expression .
   73 shift_expression: shift_expression . LEFT_OP additive_expression
   74                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 64
    RIGHT_OP  shift, and go to state 65

    $default  reduce using rule 67 (relational_expression)


state 35

   72 shift_expression: additive_expression .
   76 additive_expression: additive_expression . '+' multiplicative_expression
   77                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 72 (shift_expression)


state 36

   75 additive_expression: multiplicative_expression .
   79 multiplicative_expression: multiplicative_expression . '*' unary_expression
   80                          | multiplicative_expression . '/' unary_expression
   81                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '%'  shift, and go to state 70

    $default  reduce using rule 75 (additive_expression)


state 37

   78 multiplicative_expression: unary_expression .

    $default  reduce using rule 78 (multiplicative_expression)


state 38

   82 unary_expression: primary_expression .

    $default  reduce using rule 82 (unary_expression)


state 39

   53 assignment_expression: IDENTIFIER ASSIGNMENT . assignment_expression

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    assignment_expression      go to state 71
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 40

   10 variable_definition: THABET type_specifier . identifier_list ASSIGNMENT expression ';'

    IDENTIFIER  shift, and go to state 72

    identifier_list  go to state 73


state 41

   87 primary_expression: IDENTIFIER .

    $default  reduce using rule 87 (primary_expression)


state 42

   85 unary_expression: '!' unary_expression .

    $default  reduce using rule 85 (unary_expression)


state 43

   86 unary_expression: '~' unary_expression .

    $default  reduce using rule 86 (unary_expression)


state 44

   84 unary_expression: '+' unary_expression .

    $default  reduce using rule 84 (unary_expression)


state 45

   83 unary_expression: '-' unary_expression .

    $default  reduce using rule 83 (unary_expression)


state 46

   19 expression: expression . ',' assignment_expression
   91 primary_expression: '(' expression . ')'

    ','  shift, and go to state 52
    ')'  shift, and go to state 74


state 47

    0 $accept: mainProgram $end .

    $default  accept


state 48

    4 program: program external_declaration .

    $default  reduce using rule 4 (program)


state 49

   11 identifier_list: IDENTIFIER .
   20 function_definition: type_specifier IDENTIFIER . '(' parameter_list ')' compound_statement

    '('  shift, and go to state 75

    $default  reduce using rule 11 (identifier_list)


state 50

    8 variable_definition: type_specifier identifier_list . ';'
    9                    | type_specifier identifier_list . ASSIGNMENT expression ';'
   12 identifier_list: identifier_list . ',' IDENTIFIER

    ASSIGNMENT  shift, and go to state 76
    ';'         shift, and go to state 77
    ','         shift, and go to state 78


state 51

   31 expression_statement: expression ';' .

    $default  reduce using rule 31 (expression_statement)


state 52

   19 expression: expression ',' . assignment_expression

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    assignment_expression      go to state 79
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 53

   55 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 54

   57 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 55

   59 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    exclusive_or_expression    go to state 82
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 56

   61 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    and_expression             go to state 83
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 57

   63 and_expression: and_expression '&' . equality_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    equality_expression        go to state 84
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 58

   65 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    relational_expression      go to state 85
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 59

   66 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    relational_expression      go to state 86
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 60

   70 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    shift_expression           go to state 87
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 61

   71 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    shift_expression           go to state 88
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 62

   68 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    shift_expression           go to state 89
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 63

   69 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    shift_expression           go to state 90
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 64

   73 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    additive_expression        go to state 91
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 65

   74 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    additive_expression        go to state 92
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 66

   76 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    multiplicative_expression  go to state 93
    unary_expression           go to state 37
    primary_expression         go to state 38


state 67

   77 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    multiplicative_expression  go to state 94
    unary_expression           go to state 37
    primary_expression         go to state 38


state 68

   79 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 95
    primary_expression  go to state 38


state 69

   80 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 96
    primary_expression  go to state 38


state 70

   81 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER  shift, and go to state 41
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    unary_expression    go to state 97
    primary_expression  go to state 38


state 71

   53 assignment_expression: IDENTIFIER ASSIGNMENT assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


state 72

   11 identifier_list: IDENTIFIER .

    $default  reduce using rule 11 (identifier_list)


state 73

   10 variable_definition: THABET type_specifier identifier_list . ASSIGNMENT expression ';'
   12 identifier_list: identifier_list . ',' IDENTIFIER

    ASSIGNMENT  shift, and go to state 98
    ','         shift, and go to state 78


state 74

   91 primary_expression: '(' expression ')' .

    $default  reduce using rule 91 (primary_expression)


state 75

   20 function_definition: type_specifier IDENTIFIER '(' . parameter_list ')' compound_statement

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    BOOL   shift, and go to state 8

    type_specifier         go to state 99
    parameter_list         go to state 100
    parameter_declaration  go to state 101


state 76

    9 variable_definition: type_specifier identifier_list ASSIGNMENT . expression ';'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 102
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 77

    8 variable_definition: type_specifier identifier_list ';' .

    $default  reduce using rule 8 (variable_definition)


state 78

   12 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 103


state 79

   19 expression: expression ',' assignment_expression .

    $default  reduce using rule 19 (expression)


state 80

   55 logical_or_expression: logical_or_expression OR_OP logical_and_expression .
   57 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 54

    $default  reduce using rule 55 (logical_or_expression)


state 81

   57 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .
   59 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 55

    $default  reduce using rule 57 (logical_and_expression)


state 82

   59 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
   61 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 56

    $default  reduce using rule 59 (inclusive_or_expression)


state 83

   61 exclusive_or_expression: exclusive_or_expression '^' and_expression .
   63 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 57

    $default  reduce using rule 61 (exclusive_or_expression)


state 84

   63 and_expression: and_expression '&' equality_expression .
   65 equality_expression: equality_expression . EQ_OP relational_expression
   66                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 58
    NE_OP  shift, and go to state 59

    $default  reduce using rule 63 (and_expression)


state 85

   65 equality_expression: equality_expression EQ_OP relational_expression .
   68 relational_expression: relational_expression . '<' shift_expression
   69                      | relational_expression . '>' shift_expression
   70                      | relational_expression . LE_OP shift_expression
   71                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 65 (equality_expression)


state 86

   66 equality_expression: equality_expression NE_OP relational_expression .
   68 relational_expression: relational_expression . '<' shift_expression
   69                      | relational_expression . '>' shift_expression
   70                      | relational_expression . LE_OP shift_expression
   71                      | relational_expression . GE_OP shift_expression

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 66 (equality_expression)


state 87

   70 relational_expression: relational_expression LE_OP shift_expression .
   73 shift_expression: shift_expression . LEFT_OP additive_expression
   74                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 64
    RIGHT_OP  shift, and go to state 65

    $default  reduce using rule 70 (relational_expression)


state 88

   71 relational_expression: relational_expression GE_OP shift_expression .
   73 shift_expression: shift_expression . LEFT_OP additive_expression
   74                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 64
    RIGHT_OP  shift, and go to state 65

    $default  reduce using rule 71 (relational_expression)


state 89

   68 relational_expression: relational_expression '<' shift_expression .
   73 shift_expression: shift_expression . LEFT_OP additive_expression
   74                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 64
    RIGHT_OP  shift, and go to state 65

    $default  reduce using rule 68 (relational_expression)


state 90

   69 relational_expression: relational_expression '>' shift_expression .
   73 shift_expression: shift_expression . LEFT_OP additive_expression
   74                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 64
    RIGHT_OP  shift, and go to state 65

    $default  reduce using rule 69 (relational_expression)


state 91

   73 shift_expression: shift_expression LEFT_OP additive_expression .
   76 additive_expression: additive_expression . '+' multiplicative_expression
   77                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 73 (shift_expression)


state 92

   74 shift_expression: shift_expression RIGHT_OP additive_expression .
   76 additive_expression: additive_expression . '+' multiplicative_expression
   77                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 74 (shift_expression)


state 93

   76 additive_expression: additive_expression '+' multiplicative_expression .
   79 multiplicative_expression: multiplicative_expression . '*' unary_expression
   80                          | multiplicative_expression . '/' unary_expression
   81                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '%'  shift, and go to state 70

    $default  reduce using rule 76 (additive_expression)


state 94

   77 additive_expression: additive_expression '-' multiplicative_expression .
   79 multiplicative_expression: multiplicative_expression . '*' unary_expression
   80                          | multiplicative_expression . '/' unary_expression
   81                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '%'  shift, and go to state 70

    $default  reduce using rule 77 (additive_expression)


state 95

   79 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 79 (multiplicative_expression)


state 96

   80 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 80 (multiplicative_expression)


state 97

   81 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 81 (multiplicative_expression)


state 98

   10 variable_definition: THABET type_specifier identifier_list ASSIGNMENT . expression ';'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 104
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 99

   23 parameter_declaration: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 100

   20 function_definition: type_specifier IDENTIFIER '(' parameter_list . ')' compound_statement
   22 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 106
    ')'  shift, and go to state 107


state 101

   21 parameter_list: parameter_declaration .

    $default  reduce using rule 21 (parameter_list)


state 102

    9 variable_definition: type_specifier identifier_list ASSIGNMENT expression . ';'
   19 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 108
    ','  shift, and go to state 52


state 103

   12 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 12 (identifier_list)


state 104

   10 variable_definition: THABET type_specifier identifier_list ASSIGNMENT expression . ';'
   19 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 109
    ','  shift, and go to state 52


state 105

   23 parameter_declaration: type_specifier IDENTIFIER .

    $default  reduce using rule 23 (parameter_declaration)


state 106

   22 parameter_list: parameter_list ',' . parameter_declaration

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    CHAR   shift, and go to state 6
    VOID   shift, and go to state 7
    BOOL   shift, and go to state 8

    type_specifier         go to state 99
    parameter_declaration  go to state 110


state 107

   20 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' . compound_statement

    '{'  shift, and go to state 111

    compound_statement  go to state 112


state 108

    9 variable_definition: type_specifier identifier_list ASSIGNMENT expression ';' .

    $default  reduce using rule 9 (variable_definition)


state 109

   10 variable_definition: THABET type_specifier identifier_list ASSIGNMENT expression ';' .

    $default  reduce using rule 10 (variable_definition)


state 110

   22 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 22 (parameter_list)


state 111

   24 compound_statement: '{' . '}'
   25                   | '{' . scope '}'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    CHAR        shift, and go to state 6
    VOID        shift, and go to state 7
    BOOL        shift, and go to state 8
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    THABET      shift, and go to state 11
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111
    '}'         shift, and go to state 122

    variable_definition        go to state 123
    type_specifier             go to state 124
    expression                 go to state 23
    compound_statement         go to state 125
    scope                      go to state 126
    scope_item                 go to state 127
    expression_statement       go to state 128
    statement                  go to state 129
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 112

   20 function_definition: type_specifier IDENTIFIER '(' parameter_list ')' compound_statement .

    $default  reduce using rule 20 (function_definition)


state 113

   37 selection_statement: IF . '(' expression ')' statement
   38                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 133


state 114

   39 selection_statement: SWITCH . '(' expression ')' '{' case_list '}'

    '('  shift, and go to state 134


state 115

   44 loop_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 135


state 116

   45 loop_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 136
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 117

   46 loop_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 137


state 118

   47 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 138


state 119

   48 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 139


state 120

   49 jump_statement: BREAK . ';'

    ';'  shift, and go to state 140


state 121

   50 jump_statement: RETURN . ';'
   51               | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 141
    '('         shift, and go to state 17

    expression                 go to state 142
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 122

   24 compound_statement: '{' '}' .

    $default  reduce using rule 24 (compound_statement)


state 123

   28 scope_item: variable_definition .

    $default  reduce using rule 28 (scope_item)


state 124

    8 variable_definition: type_specifier . identifier_list ';'
    9                    | type_specifier . identifier_list ASSIGNMENT expression ';'

    IDENTIFIER  shift, and go to state 72

    identifier_list  go to state 50


state 125

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


state 126

   25 compound_statement: '{' scope . '}'
   27 scope: scope . scope_item

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    CHAR        shift, and go to state 6
    VOID        shift, and go to state 7
    BOOL        shift, and go to state 8
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    THABET      shift, and go to state 11
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111
    '}'         shift, and go to state 143

    variable_definition        go to state 123
    type_specifier             go to state 124
    expression                 go to state 23
    compound_statement         go to state 125
    scope_item                 go to state 144
    expression_statement       go to state 128
    statement                  go to state 129
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 127

   26 scope: scope_item .

    $default  reduce using rule 26 (scope)


state 128

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


state 129

   29 scope_item: statement .

    $default  reduce using rule 29 (scope_item)


state 130

   34 statement: selection_statement .

    $default  reduce using rule 34 (statement)


state 131

   35 statement: loop_statement .

    $default  reduce using rule 35 (statement)


state 132

   36 statement: jump_statement .

    $default  reduce using rule 36 (statement)


state 133

   37 selection_statement: IF '(' . expression ')' statement
   38                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 145
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 134

   39 selection_statement: SWITCH '(' . expression ')' '{' case_list '}'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 146
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 135

   44 loop_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 147
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 136

   45 loop_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 148


state 137

   46 loop_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17

    expression                 go to state 23
    expression_statement       go to state 149
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 138

   47 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 150


state 139

   48 jump_statement: CONTINUE ';' .

    $default  reduce using rule 48 (jump_statement)


state 140

   49 jump_statement: BREAK ';' .

    $default  reduce using rule 49 (jump_statement)


state 141

   50 jump_statement: RETURN ';' .

    $default  reduce using rule 50 (jump_statement)


state 142

   19 expression: expression . ',' assignment_expression
   51 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 151
    ','  shift, and go to state 52


state 143

   25 compound_statement: '{' scope '}' .

    $default  reduce using rule 25 (compound_statement)


state 144

   27 scope: scope scope_item .

    $default  reduce using rule 27 (scope)


state 145

   19 expression: expression . ',' assignment_expression
   37 selection_statement: IF '(' expression . ')' statement
   38                    | IF '(' expression . ')' statement ELSE statement

    ','  shift, and go to state 52
    ')'  shift, and go to state 152


state 146

   19 expression: expression . ',' assignment_expression
   39 selection_statement: SWITCH '(' expression . ')' '{' case_list '}'

    ','  shift, and go to state 52
    ')'  shift, and go to state 153


state 147

   19 expression: expression . ',' assignment_expression
   44 loop_statement: WHILE '(' expression . ')' statement

    ','  shift, and go to state 52
    ')'  shift, and go to state 154


state 148

   45 loop_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 155


state 149

   46 loop_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17

    expression                 go to state 23
    expression_statement       go to state 156
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 150

   47 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 47 (jump_statement)


state 151

   51 jump_statement: RETURN expression ';' .

    $default  reduce using rule 51 (jump_statement)


state 152

   37 selection_statement: IF '(' expression ')' . statement
   38                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 157
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 153

   39 selection_statement: SWITCH '(' expression ')' . '{' case_list '}'

    '{'  shift, and go to state 158


state 154

   44 loop_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 159
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 155

   45 loop_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 160
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 156

   46 loop_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    '('         shift, and go to state 17

    expression                 go to state 161
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 157

   37 selection_statement: IF '(' expression ')' statement .
   38                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 162

    $default  reduce using rule 37 (selection_statement)


state 158

   39 selection_statement: SWITCH '(' expression ')' '{' . case_list '}'

    CASE     shift, and go to state 163
    DEFAULT  shift, and go to state 164

    case_list  go to state 165
    case_item  go to state 166


state 159

   44 loop_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 44 (loop_statement)


state 160

   19 expression: expression . ',' assignment_expression
   45 loop_statement: DO statement WHILE '(' expression . ')' ';'

    ','  shift, and go to state 52
    ')'  shift, and go to state 167


state 161

   19 expression: expression . ',' assignment_expression
   46 loop_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ','  shift, and go to state 52
    ')'  shift, and go to state 168


state 162

   38 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 169
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 163

   42 case_item: CASE . CONSTANT ':' statement

    CONSTANT  shift, and go to state 170


state 164

   43 case_item: DEFAULT . ':' statement

    ':'  shift, and go to state 171


state 165

   39 selection_statement: SWITCH '(' expression ')' '{' case_list . '}'
   41 case_list: case_list . case_item

    CASE     shift, and go to state 163
    DEFAULT  shift, and go to state 164
    '}'      shift, and go to state 172

    case_item  go to state 173


state 166

   40 case_list: case_item .

    $default  reduce using rule 40 (case_list)


state 167

   45 loop_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 174


state 168

   46 loop_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 175
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 169

   38 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 38 (selection_statement)


state 170

   42 case_item: CASE CONSTANT . ':' statement

    ':'  shift, and go to state 176


state 171

   43 case_item: DEFAULT ':' . statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 177
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 172

   39 selection_statement: SWITCH '(' expression ')' '{' case_list '}' .

    $default  reduce using rule 39 (selection_statement)


state 173

   41 case_list: case_list case_item .

    $default  reduce using rule 41 (case_list)


state 174

   45 loop_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 45 (loop_statement)


state 175

   46 loop_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 46 (loop_statement)


state 176

   42 case_item: CASE CONSTANT ':' . statement

    IDENTIFIER  shift, and go to state 2
    CONSTANT    shift, and go to state 3
    TRUE        shift, and go to state 9
    FALSE       shift, and go to state 10
    IF          shift, and go to state 113
    SWITCH      shift, and go to state 114
    WHILE       shift, and go to state 115
    DO          shift, and go to state 116
    FOR         shift, and go to state 117
    GOTO        shift, and go to state 118
    CONTINUE    shift, and go to state 119
    BREAK       shift, and go to state 120
    RETURN      shift, and go to state 121
    '!'         shift, and go to state 12
    '~'         shift, and go to state 13
    '+'         shift, and go to state 14
    '-'         shift, and go to state 15
    ';'         shift, and go to state 16
    '('         shift, and go to state 17
    '{'         shift, and go to state 111

    expression                 go to state 23
    compound_statement         go to state 125
    expression_statement       go to state 128
    statement                  go to state 178
    selection_statement        go to state 130
    loop_statement             go to state 131
    jump_statement             go to state 132
    assignment_expression      go to state 26
    logical_or_expression      go to state 27
    logical_and_expression     go to state 28
    inclusive_or_expression    go to state 29
    exclusive_or_expression    go to state 30
    and_expression             go to state 31
    equality_expression        go to state 32
    relational_expression      go to state 33
    shift_expression           go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    primary_expression         go to state 38


state 177

   43 case_item: DEFAULT ':' statement .

    $default  reduce using rule 43 (case_item)


state 178

   42 case_item: CASE CONSTANT ':' statement .

    $default  reduce using rule 42 (case_item)
